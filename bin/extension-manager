#!/usr/bin/env php
<?php

use Phpactor\Container\PhpactorContainer;
use Phpactor\Extension\Console\ConsoleExtension;
use Phpactor\Extension\ExtensionManager\ExtensionManagerExtension;
use Phpactor\Extension\Logger\LoggingExtension;
use Phpactor\FilePathResolverExtension\FilePathResolverExtension;
use Symfony\Component\Console\Application;

$extensionsPath = __DIR__ . '/../vendor-extension/installed.cache.php';
$extensionsVendorDir = __DIR__ . '/../vendor-extension';

if (file_exists($extensionsVendorDir . '/autoload.php')) {
    require $extensionsVendorDir . '/autoload.php';
}

require __DIR__ . '/../vendor/autoload.php';

$extensions = [];
if (file_exists($extensionsPath)) {
    $extensions = require($extensionsPath);

    $extensions = array_filter($extensions, function (string $extension) {
        $exists = class_exists($extension);
        if (!$exists) {
            echo sprintf('!! Extension "%s" does not exist', $extension) . PHP_EOL;
        }
        return $exists;
    });
}


$container = PhpactorContainer::fromExtensions(array_merge($extensions, [
    ExtensionManagerExtension::class,
    ConsoleExtension::class,
]), [
    ExtensionManagerExtension::PARAM_EXTENSION_CONFIG_FILE => __DIR__ . '/../extensions.json',
    ExtensionManagerExtension::PARAM_VENDOR_DIR => __DIR__ . '/../vendor',
    ExtensionManagerExtension::PARAM_EXTENSION_VENDOR_DIR => $extensionsVendorDir,
    ExtensionManagerExtension::PARAM_INSTALLED_EXTENSIONS_FILE => __DIR__ . '/../vendor-extension/installed.cache.php',
    ExtensionManagerExtension::PARAM_MINIMUM_STABILITY=> 'dev',
]);

$application = new Application();
$application->setCommandLoader(
    $container->get(ConsoleExtension::SERVICE_COMMAND_LOADER)
);
$application->run();
